# SPDX-License-Identifier: AGPL-3.0-or-later
#
# PASST - Plug A Simple Socket Transport
#  for qemu/UNIX domain socket mode
#
# PASTA - Pack A Subtle Tap Abstraction
#  for network namespace/tap device mode
#
# test/udp/passt_in_ns - Check UDP functionality for passt in ns and pasta
#
# Copyright (c) 2021 Red Hat GmbH
# Author: Stefano Brivio <sbrivio@redhat.com>

gtools	socat tee grep cat ip jq md5sum cut
nstools	socat tee grep cat ip jq md5sum cut
htools	printf dd socat tee grep cat ip jq md5sum cut

test	UDP/IPv4: host to guest
temp	TEMP
temp	SC_PID
guestb	(socat -u UDP4-LISTEN:10001 STDOUT & echo $! > sc.pid) | tee test.bin | (grep -qm1 "END_OF_TEST" && kill $(cat sc.pid))
sleep	1
host	dd if=/dev/urandom bs=1k count=5 > __TEMP__ && printf "\nEND_OF_TEST\n" >> __TEMP__
host	socat -u OPEN:__TEMP__ UDP4:127.0.0.1:10001
guestw
hout	MD5 md5sum __TEMP__ | cut -d' ' -f1
gout	GUEST_MD5 md5sum test.bin | cut -d' ' -f1
check	[ "__GUEST_MD5__" = "__MD5__" ]

test	UDP/IPv4: host to ns
temp	TEMP_NS
nsb	(socat -u UDP4-LISTEN:10002 STDOUT & echo $! > __SC_PID__) | tee __TEMP_NS__ | (grep -qm1 "END_OF_TEST" && kill $(cat __SC_PID__))
host	socat -u OPEN:__TEMP__ UDP4:127.0.0.1:10002
nsw
nsout	NS_MD5 md5sum __TEMP_NS__ | cut -d' ' -f1
check	[ "__NS_MD5__" = "__MD5__" ]

test	UDP/IPv4: guest to host
hostb	(socat -u UDP4-LISTEN:10003 STDOUT & echo $! > __SC_PID__) | tee __TEMP__ | (grep -qm1 "END_OF_TEST" && kill $(cat __SC_PID__))
gout	GW ip -j -4 route show|jq -rM '.[] | select(.dst == "default").gateway'
guest	socat -u OPEN:test.bin UDP4:__GW__:10003
hostw
hout	HOST_MD5 md5sum __TEMP__ | cut -d' ' -f1
check	[ "__HOST_MD5__" = "__MD5__" ]

test	UDP/IPv4: guest to ns
nsb	(socat -u UDP4-LISTEN:10002 STDOUT & echo $! > __SC_PID__) | tee __TEMP_NS__ | (grep -qm1 "END_OF_TEST" && kill $(cat __SC_PID__))
guest	socat -u OPEN:test.bin UDP4:__GW__:10002
nsw
hout	HOST_MD5 md5sum __TEMP__ | cut -d' ' -f1
check	[ "__HOST_MD5__" = "__MD5__" ]

test	UDP/IPv4: ns to host (recvmmsg/sendmmsg)
sleep	1
hostb	(socat -u UDP4-LISTEN:10003 STDOUT & echo $! > __SC_PID__) | tee __TEMP__ | (grep -qm1 "END_OF_TEST" && kill $(cat __SC_PID__))
ns	socat -u OPEN:__TEMP_NS__ UDP4:127.0.0.1:10003
hostw
hout	HOST_MD5 md5sum __TEMP__ | cut -d' ' -f1
check	[ "__HOST_MD5__" = "__MD5__" ]

test	UDP/IPv4: ns to host (via tap)
hostb	(socat -u UDP4-LISTEN:10003 STDOUT & echo $! > __SC_PID__) | tee __TEMP__ | (grep -qm1 "END_OF_TEST" && kill $(cat __SC_PID__))
ns	socat -u OPEN:__TEMP_NS__ UDP4:__GW__:10003
hostw
hout	HOST_MD5 md5sum __TEMP__ | cut -d' ' -f1
check	[ "__HOST_MD5__" = "__MD5__" ]

test	UDP/IPv4: ns to guest (using loopback address)
guestb	(socat -u UDP4-LISTEN:10001 STDOUT & echo $! > sc.pid) | tee test.bin | (grep -qm1 "END_OF_TEST" && kill $(cat sc.pid))
ns	socat -u OPEN:__TEMP_NS__ UDP4:127.0.0.1:10001
guestw
gout	GUEST_MD5 md5sum test.bin | cut -d' ' -f1
check	[ "__GUEST_MD5__" = "__MD5__" ]

test	UDP/IPv4: ns to guest (using namespace address)
guestb	(socat -u UDP4-LISTEN:10001 STDOUT & echo $! > sc.pid) | tee test.bin | (grep -qm1 "END_OF_TEST" && kill $(cat sc.pid))
nsout	IFNAME ip -j link show | jq -rM '.[] | select(.link_type == "ether").ifname'
nsout	ADDR ip -j -4 addr show|jq -rM '.[] | select(.ifname == "__IFNAME__").addr_info[0].local'
ns	socat -u OPEN:__TEMP_NS__ UDP4:__ADDR__:10001
guestw
gout	GUEST_MD5 md5sum test.bin | cut -d' ' -f1
check	[ "__GUEST_MD5__" = "__MD5__" ]

test	UDP/IPv6: host to guest
guestb	(socat -u UDP6-LISTEN:10001 STDOUT & echo $! > sc.pid) | tee test.bin | (grep -qm1 "END_OF_TEST" && kill $(cat sc.pid))
host	socat -u OPEN:__TEMP__ UDP6:[::1]:10001
guestw
gout	GUEST_MD5 md5sum test.bin | cut -d' ' -f1
check	[ "__GUEST_MD5__" = "__MD5__" ]

test	UDP/IPv6: host to ns
nsb	(socat -u UDP6-LISTEN:10002 STDOUT & echo $! > __SC_PID__) | tee __TEMP_NS__ | (grep -qm1 "END_OF_TEST" && kill $(cat __SC_PID__))
host	socat -u OPEN:__TEMP__ UDP6:[::1]:10002
nsw
nsout	NS_MD5 md5sum __TEMP_NS__ | cut -d' ' -f1
check	[ "__NS_MD5__" = "__MD5__" ]

test	UDP/IPv6: guest to host
hostb	(socat -u UDP6-LISTEN:10003 STDOUT & echo $! > __SC_PID__) | tee __TEMP__ | (grep -qm1 "END_OF_TEST" && kill $(cat __SC_PID__))
gout	GW6 ip -j -6 route show|jq -rM '.[] | select(.dst == "default").gateway'
gout	IFNAME ip -j link show | jq -rM '.[] | select(.link_type == "ether").ifname'
guest	socat -u OPEN:test.bin UDP6:[__GW6__%__IFNAME__]:10003
hostw
hout	HOST_MD5 md5sum __TEMP__ | cut -d' ' -f1
check	[ "__HOST_MD5__" = "__MD5__" ]

test	UDP/IPv6: guest to ns
nsb	(socat -u UDP6-LISTEN:10002 STDOUT & echo $! > __SC_PID__) | tee __TEMP_NS__ | (grep -qm1 "END_OF_TEST" && kill $(cat __SC_PID__))
guest	socat -u OPEN:test.bin UDP6:[__GW6__%__IFNAME__]:10002
nsw
hout	HOST_MD5 md5sum __TEMP__ | cut -d' ' -f1
check	[ "__HOST_MD5__" = "__MD5__" ]

test	UDP/IPv6: ns to host (recvmmsg/sendmmsg)
hostb	(socat -u UDP6-LISTEN:10003 STDOUT & echo $! > __SC_PID__) | tee __TEMP__ | (grep -qm1 "END_OF_TEST" && kill $(cat __SC_PID__))
ns	socat -u OPEN:__TEMP_NS__ UDP6:[::1]:10003
hostw
hout	HOST_MD5 md5sum __TEMP__ | cut -d' ' -f1
check	[ "__HOST_MD5__" = "__MD5__" ]

test	UDP/IPv6: ns to host (via tap)
hostb	(socat -u UDP6-LISTEN:10003 STDOUT & echo $! > __SC_PID__) | tee __TEMP__ | (grep -qm1 "END_OF_TEST" && kill $(cat __SC_PID__))
nsout	IFNAME ip -j link show | jq -rM '.[] | select(.link_type == "ether").ifname'
ns	socat -u OPEN:__TEMP_NS__ UDP6:[__GW6__%__IFNAME__]:10003
hostw
hout	HOST_MD5 md5sum __TEMP__ | cut -d' ' -f1
check	[ "__HOST_MD5__" = "__MD5__" ]

test	UDP/IPv6: ns to guest (using loopback address)
guestb	(socat -u UDP6-LISTEN:10001 STDOUT & echo $! > sc.pid) | tee test.bin | (grep -qm1 "END_OF_TEST" && kill $(cat sc.pid))
ns	socat -u OPEN:__TEMP_NS__ UDP6:[::1]:10001
guestw
gout	GUEST_MD5 md5sum test.bin | cut -d' ' -f1
check	[ "__GUEST_MD5__" = "__MD5__" ]

test	UDP/IPv6: ns to guest (using namespace address)
guestb	(socat -u UDP6-LISTEN:10001 STDOUT & echo $! > sc.pid) | tee test.bin | (grep -qm1 "END_OF_TEST" && kill $(cat sc.pid))
nsout	ADDR6 ip -j -6 addr show|jq -rM '.[] | select(.ifname == "__IFNAME__").addr_info[0].local'
ns	socat -u OPEN:__TEMP_NS__ UDP6:[__ADDR6__]:10001
guestw
gout	GUEST_MD5 md5sum test.bin | cut -d' ' -f1
check	[ "__GUEST_MD5__" = "__MD5__" ]
