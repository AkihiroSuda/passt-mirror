# SPDX-License-Identifier: GPL-2.0-or-later
#
# PASST - Plug A Simple Socket Transport
#  for qemu/UNIX domain socket mode
#
# PASTA - Pack A Subtle Tap Abstraction
#  for network namespace/tap device mode
#
# test/perf/pasta_tcp - Check TCP performance in pasta mode
#
# Copyright (c) 2021 Red Hat GmbH
# Author: Stefano Brivio <sbrivio@redhat.com>

htools	head ip seq bc sleep iperf3 tcp_rr tcp_crr jq sed
nstools	/sbin/sysctl nproc ip seq sleep iperf3 tcp_rr tcp_crr jq sed

set	MAP_HOST4 192.0.2.1
set	MAP_HOST6 2001:db8:9a55::1

test	pasta: throughput and latency (local connections)

ns	/sbin/sysctl -w net.ipv4.tcp_rmem="131072 524288 134217728"
ns	/sbin/sysctl -w net.ipv4.tcp_wmem="131072 524288 134217728"
ns	/sbin/sysctl -w net.ipv4.tcp_timestamps=0


set	THREADS 4
set	TIME 1
set	OMIT 0.1
set	OPTS -Z -w 4M -l 1M -P __THREADS__ -O__OMIT__

hout	FREQ_PROCFS (echo "scale=1"; sed -n 's/cpu MHz.*: \([0-9]*\)\..*$/(\1+10^2\/2)\/10^3/p' /proc/cpuinfo) | bc -l | head -n1
hout	FREQ_CPUFREQ (echo "scale=1"; printf '( %i + 10^5 / 2 ) / 10^6\n' $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq) ) | bc -l
hout	FREQ [ -n "__FREQ_CPUFREQ__" ] && echo __FREQ_CPUFREQ__ || echo __FREQ_PROCFS__


info	Throughput in Gbps, latency in µs, __THREADS__ threads at __FREQ__ GHz
report	pasta lo_tcp __THREADS__ __FREQ__

th	MTU 65535B

tr	TCP throughput over IPv6: ns to host
iperf3s	host 10003

iperf3	BW ns ::1 10003 __THREADS__ __TIME__ __OPTS__
bw	__BW__ 15.0 20.0

iperf3k	host

tl	TCP RR latency over IPv6: ns to host
hostb	tcp_rr --nolog -P 10003 -C 10013 -6
nsout	LAT tcp_rr --nolog -l1 -P 10003 -C 10013 -6 -c -H ::1 | sed -n 's/^throughput=\(.*\)/\1/p'
hostw
lat	__LAT__ 150 100

tl	TCP CRR latency over IPv6: ns to host
hostb	tcp_crr --nolog -P 10003 -C 10013 -6
nsout	LAT tcp_crr --nolog -l1 -P 10003 -C 10013 -6 -c -H ::1 | sed -n 's/^throughput=\(.*\)/\1/p'
hostw
lat	__LAT__ 500 350


tr	TCP throughput over IPv4: ns to host
iperf3s	host 10003

iperf3	BW ns 127.0.0.1 10003 __THREADS__ __TIME__ __OPTS__
bw	__BW__ 15.0 20.0

iperf3k	host

tl	TCP RR latency over IPv4: ns to host
hostb	tcp_rr --nolog -P 10003 -C 10013 -4
nsout	LAT tcp_rr --nolog -l1 -P 10003 -C 10013 -4 -c -H 127.0.0.1 | sed -n 's/^throughput=\(.*\)/\1/p'
hostw
lat	__LAT__ 150 100

tl	TCP CRR latency over IPv4: ns to host
hostb	tcp_crr --nolog -P 10003 -C 10013 -4
nsout	LAT tcp_crr --nolog -l1 -P 10003 -C 10013 -4 -c -H 127.0.0.1 | sed -n 's/^throughput=\(.*\)/\1/p'
hostw
lat	__LAT__ 500 350

tr	TCP throughput over IPv6: host to ns
iperf3s	ns 10002

iperf3	BW host ::1 10002 __TIME__ __OPTS__
bw	__BW__ 15.0 20.0

iperf3k	ns

tl	TCP RR latency over IPv6: host to ns
nsb	tcp_rr --nolog -P 10002 -C 10012 -6
hout	LAT tcp_rr --nolog -l1 -P 10002 -C 10012 -6 -c -H ::1 | sed -n 's/^throughput=\(.*\)/\1/p'
nsw
lat	__LAT__ 150 100

tl	TCP CRR latency over IPv6: host to ns
nsb	tcp_crr --nolog -P 10002 -C 10012 -6
hout	LAT tcp_crr --nolog -l1 -P 10002 -C 10012 -6 -c -H ::1 | sed -n 's/^throughput=\(.*\)/\1/p'
nsw
lat	__LAT__ 1000 700


tr	TCP throughput over IPv4: host to ns
iperf3s	ns 10002

iperf3	BW host 127.0.0.1 10002 __TIME__ __OPTS__
bw	__BW__ 15.0 20.0

iperf3k	ns

tl	TCP RR latency over IPv4: host to ns
nsb	tcp_rr --nolog -P 10002 -C 10012 -4
hout	LAT tcp_rr --nolog -l1 -P 10002 -C 10012 -4 -c -H 127.0.0.1 | sed -n 's/^throughput=\(.*\)/\1/p'
nsw
lat	__LAT__ 150 100

tl	TCP CRR latency over IPv4: host to ns
nsb	tcp_crr --nolog -P 10002 -C 10012 -4
hout	LAT tcp_crr --nolog -l1 -P 10002 -C 10012 -4 -c -H 127.0.0.1 | sed -n 's/^throughput=\(.*\)/\1/p'
nsw
lat	__LAT__ 1000 700

te

test	pasta: throughput and latency (connections via tap)

nsout	IFNAME ip -j link show | jq -rM '.[] | select(.link_type == "ether").ifname'
set	THREADS 2
set	OPTS -Z -P __THREADS__ -i1 -O__OMIT__

info	Throughput in Gbps, latency in µs, __THREADS__ threads at __FREQ__ GHz
report	pasta tap_tcp __THREADS__ __FREQ__

th	MTU 1500B 4000B 16384B 65520B

tr	TCP throughput over IPv6: ns to host
iperf3s	host 10003

ns	ip link set dev __IFNAME__ mtu 1500
iperf3	BW ns __MAP_HOST6__ 10003 __TIME__ __OPTS__ -w 512k
bw	__BW__ 0.2 0.4
ns	ip link set dev __IFNAME__ mtu 4000
iperf3	BW ns __MAP_HOST6__ 10003 __TIME__ __OPTS__ -w 1M
bw	__BW__ 0.3 0.5
ns	ip link set dev __IFNAME__ mtu 16384
iperf3	BW ns __MAP_HOST6__ 10003 __TIME__ __OPTS__ -w 8M
bw	__BW__ 1.5 2.0
ns	ip link set dev __IFNAME__ mtu 65520
iperf3	BW ns __MAP_HOST6__ 10003 __TIME__ __OPTS__ -w 8M
bw	__BW__ 2.0 2.5

iperf3k	host

tl	TCP RR latency over IPv6: ns to host
lat	-
lat	-
lat	-
hostb	tcp_rr --nolog -P 10003 -C 10013 -6
nsout	LAT tcp_rr --nolog -l1 -P 10003 -C 10013 -6 -c -H __MAP_HOST6__ | sed -n 's/^throughput=\(.*\)/\1/p'
hostw
lat	__LAT__ 150 100

tl	TCP CRR latency over IPv6: ns to host
lat	-
lat	-
lat	-
hostb	tcp_crr --nolog -P 10003 -C 10013 -6
nsout	LAT tcp_crr --nolog -l1 -P 10003 -C 10013 -6 -c -H __MAP_HOST6__ | sed -n 's/^throughput=\(.*\)/\1/p'
hostw
lat	__LAT__ 1500 500


tr	TCP throughput over IPv4: ns to host
iperf3s	host 10003

ns	ip link set dev __IFNAME__ mtu 1500
iperf3	BW ns __MAP_HOST4__ 10003 __TIME__ __OPTS__ -w 512k
bw	__BW__ 0.2 0.4
ns	ip link set dev __IFNAME__ mtu 4000
iperf3	BW ns __MAP_HOST4__ 10003 __TIME__ __OPTS__ -w 1M
bw	__BW__ 0.3 0.5
ns	ip link set dev __IFNAME__ mtu 16384
iperf3	BW ns __MAP_HOST4__ 10003 __TIME__ __OPTS__ -w 8M
bw	__BW__ 1.5 2.0
ns	ip link set dev __IFNAME__ mtu 65520
iperf3	BW ns __MAP_HOST4__ 10003 __TIME__ __OPTS__ -w 8M
bw	__BW__ 2.0 2.5

iperf3k	host

tl	TCP RR latency over IPv4: ns to host
lat	-
lat	-
lat	-
hostb	tcp_rr --nolog -P 10003 -C 10013 -4
nsout	LAT tcp_rr --nolog -l1 -P 10003 -C 10013 -4 -c -H __MAP_HOST4__ | sed -n 's/^throughput=\(.*\)/\1/p'
hostw
lat	__LAT__ 150 100

tl	TCP CRR latency over IPv4: ns to host
lat	-
lat	-
lat	-
hostb	tcp_crr --nolog -P 10003 -C 10013 -4
nsout	LAT tcp_crr --nolog -l1 -P 10003 -C 10013 -4 -c -H __MAP_HOST4__ | sed -n 's/^throughput=\(.*\)/\1/p'
hostw
lat	__LAT__ 1500 500

tr	TCP throughput over IPv6: host to ns
iperf3s	ns 10002

nsout	IFNAME ip -j link show | jq -rM '.[] | select(.link_type == "ether").ifname'
nsout	ADDR6 ip -j -6 addr show|jq -rM '[.[] | select(.ifname == "__IFNAME__").addr_info[] | select(.scope == "global").local] | .[0]'
bw	-
bw	-
bw	-
iperf3	BW host __ADDR6__ 10002 __TIME__ __OPTS__
bw	__BW__ 8.0 10.0

iperf3k	ns

tl	TCP RR latency over IPv6: host to ns
lat	-
lat	-
lat	-
nsb	tcp_rr --nolog -P 10002 -C 10012 -6
hout	LAT tcp_rr --nolog -l1 -P 10002 -C 10012 -6 -c -H __ADDR6__ | sed -n 's/^throughput=\(.*\)/\1/p'
nsw
lat	__LAT__ 150 100

tl	TCP CRR latency over IPv6: host to ns
lat	-
lat	-
lat	-
sleep	1
nsb	tcp_crr --nolog -P 10002 -C 10012 -6
hout	LAT tcp_crr --nolog -l1 -P 10002 -C 10012 -6 -c -H __ADDR6__ | sed -n 's/^throughput=\(.*\)/\1/p'
nsw
lat	__LAT__ 5000 10000


tr	TCP throughput over IPv4: host to ns
iperf3s	ns 10002

nsout	ADDR ip -j -4 addr show|jq -rM '.[] | select(.ifname == "__IFNAME__").addr_info[0].local'
bw	-
bw	-
bw	-
iperf3	BW host __ADDR__ 10002 __TIME__ __OPTS__
bw	__BW__ 8.0 10.0

iperf3k	ns

tl	TCP RR latency over IPv4: host to ns
lat	-
lat	-
lat	-
nsb	tcp_rr --nolog -P 10002 -C 10012 -4
hout	LAT tcp_rr --nolog -l1 -P 10002 -C 10012 -4 -c -H __ADDR__ | sed -n 's/^throughput=\(.*\)/\1/p'
nsw
lat	__LAT__ 150 100

tl	TCP CRR latency over IPv4: host to ns
lat	-
lat	-
lat	-
sleep	1
nsb	tcp_crr --nolog -P 10002 -C 10012 -4
hout	LAT tcp_crr --nolog -l1 -P 10002 -C 10012 -4 -c -H __ADDR__ | sed -n 's/^throughput=\(.*\)/\1/p'
nsw
lat	__LAT__ 5000 10000

te
