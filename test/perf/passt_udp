# SPDX-License-Identifier: GPL-2.0-or-later
#
# PASST - Plug A Simple Socket Transport
#  for qemu/UNIX domain socket mode
#
# PASTA - Pack A Subtle Tap Abstraction
#  for network namespace/tap device mode
#
# test/perf/passt_udp - Check UDP performance in passt mode
#
# Copyright (c) 2021 Red Hat GmbH
# Author: Stefano Brivio <sbrivio@redhat.com>

gtools	/sbin/sysctl ip jq nproc sleep iperf3 udp_rr # From neper
nstools	ip jq sleep iperf3 udp_rr
htools	bc head sed

set	MAP_NS4 192.0.2.2
set	MAP_NS6 2001:db8:9a55::2

test	passt: throughput and latency

guest	/sbin/sysctl -w net.core.rmem_max=16777216
guest	/sbin/sysctl -w net.core.wmem_max=16777216
guest	/sbin/sysctl -w net.core.rmem_default=16777216
guest	/sbin/sysctl -w net.core.wmem_default=16777216

hout	FREQ_PROCFS (echo "scale=1"; sed -n 's/cpu MHz.*: \([0-9]*\)\..*$/(\1+10^2\/2)\/10^3/p' /proc/cpuinfo) | bc -l | head -n1
hout	FREQ_CPUFREQ (echo "scale=1"; printf '( %i + 10^5 / 2 ) / 10^6\n' $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq) ) | bc -l
hout	FREQ [ -n "__FREQ_CPUFREQ__" ] && echo __FREQ_CPUFREQ__ || echo __FREQ_PROCFS__

set	THREADS 2
set	TIME 1
set	OPTS -u -P __THREADS__ --pacing-timer 1000

info	Throughput in Gbps, latency in Âµs, __THREADS__ threads at __FREQ__ GHz

report	passt udp __THREADS__ __FREQ__

th	pktlen 256B 576B 1280B 1500B 9000B 65520B

tr	UDP throughput over IPv6: guest to host
iperf3s	ns 10002
# (datagram size) = (packet size) - 48: 40 bytes of IPv6 header, 8 of UDP header

bw	-
bw	-
iperf3	BW guest __MAP_NS6__ 10002 __TIME__ __OPTS__ -b 3G -l 1232
bw	__BW__ 0.8 1.2
iperf3	BW guest __MAP_NS6__ 10002 __TIME__ __OPTS__ -b 4G -l 1452
bw	__BW__ 1.0 1.5
iperf3	BW guest __MAP_NS6__ 10002 __TIME__ __OPTS__ -b 8G -l 8952
bw	__BW__ 4.0 5.0
iperf3	BW guest __MAP_NS6__ 10002 __TIME__ __OPTS__ -b 15G -l 64372
bw	__BW__ 4.0 5.0

iperf3k	ns

tl	UDP RR latency over IPv6: guest to host
lat	-
lat	-
lat	-
lat	-
lat	-
nsb	udp_rr --nolog -6
gout	LAT udp_rr --nolog -6 -c -H __MAP_NS6__ | sed -n 's/^throughput=\(.*\)/\1/p'
lat	__LAT__ 200 150


tr	UDP throughput over IPv4: guest to host
iperf3s	ns 10002
# (datagram size) = (packet size) - 28: 20 bytes of IPv4 header, 8 of UDP header

iperf3	BW guest __MAP_NS4__ 10002 __TIME__ __OPTS__ -b 1G -l 228
bw	__BW__ 0.0 0.0
iperf3	BW guest __MAP_NS4__ 10002 __TIME__ __OPTS__ -b 2G -l 548
bw	__BW__ 0.4 0.6
iperf3	BW guest __MAP_NS4__ 10002 __TIME__ __OPTS__ -b 3G -l 1252
bw	__BW__ 0.8 1.2
iperf3	BW guest __MAP_NS4__ 10002 __TIME__ __OPTS__ -b 4G -l 1472
bw	__BW__ 1.0 1.5
iperf3	BW guest __MAP_NS4__ 10002 __TIME__ __OPTS__ -b 8G -l 8972
bw	__BW__ 4.0 5.0
iperf3	BW guest __MAP_NS4__ 10002 __TIME__ __OPTS__ -b 15G -l 65492
bw	__BW__ 4.0 5.0

iperf3k	ns

tl	UDP RR latency over IPv4: guest to host
lat	-
lat	-
lat	-
lat	-
lat	-
nsb	udp_rr --nolog -4
gout	LAT udp_rr --nolog -4 -c -H __MAP_NS4__ | sed -n 's/^throughput=\(.*\)/\1/p'
lat	__LAT__ 200 150


tr	UDP throughput over IPv6: host to guest
iperf3s	guest 10001
# (datagram size) = (packet size) - 48: 40 bytes of IPv6 header, 8 of UDP header

bw	-
bw	-
iperf3	BW ns ::1 10001 __TIME__ __OPTS__ -b 3G -l 1232
bw	__BW__ 0.8 1.2
iperf3	BW ns ::1 10001 __TIME__ __OPTS__ -b 4G -l 1452
bw	__BW__ 1.0 1.5
iperf3	BW ns ::1 10001 __TIME__ __OPTS__ -b 8G -l 8952
bw	__BW__ 3.0 4.0
iperf3	BW ns ::1 10001 __TIME__ __OPTS__ -b 15G -l 64372
bw	__BW__ 3.0 4.0

iperf3k	guest

tl	UDP RR latency over IPv6: host to guest
lat	-
lat	-
lat	-
lat	-
lat	-
guestb	udp_rr --nolog -P 10001 -C 10011 -6
sleep	1
nsout	LAT udp_rr --nolog -P 10001 -C 10011 -6 -c -H ::1 | sed -n 's/^throughput=\(.*\)/\1/p'
lat	__LAT__ 200 150


tr	UDP throughput over IPv4: host to guest
iperf3s	guest 10001
# (datagram size) = (packet size) - 28: 20 bytes of IPv4 header, 8 of UDP header

iperf3	BW ns 127.0.0.1 10001 __TIME__ __OPTS__ -b 1G -l 228
bw	__BW__ 0.0 0.0
iperf3	BW ns 127.0.0.1 10001 __TIME__ __OPTS__ -b 2G -l 548
bw	__BW__ 0.4 0.6
iperf3	BW ns 127.0.0.1 10001 __TIME__ __OPTS__ -b 3G -l 1252
bw	__BW__ 0.8 1.2
iperf3	BW ns 127.0.0.1 10001 __TIME__ __OPTS__ -b 4G -l 1472
bw	__BW__ 1.0 1.5
iperf3	BW ns 127.0.0.1 10001 __TIME__ __OPTS__ -b 8G -l 8972
bw	__BW__ 3.0 4.0
iperf3	BW ns 127.0.0.1 10001 __TIME__ __OPTS__ -b 15G -l 65492
bw	__BW__ 3.0 4.0

iperf3k	guest

tl	UDP RR latency over IPv4: host to guest
lat	-
lat	-
lat	-
lat	-
lat	-
guestb	udp_rr --nolog -P 10001 -C 10011 -4
sleep	1
nsout	LAT udp_rr --nolog -P 10001 -C 10011 -4 -c -H 127.0.0.1 | sed -n 's/^throughput=\(.*\)/\1/p'
lat	__LAT__ 200 150

te
