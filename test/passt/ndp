# SPDX-License-Identifier: GPL-2.0-or-later
#
# PASST - Plug A Simple Socket Transport
#  for qemu/UNIX domain socket mode
#
# PASTA - Pack A Subtle Tap Abstraction
#  for network namespace/tap device mode
#
# test/passt/ndp - Check NDP functionality in passt mode
#
# Copyright (c) 2021 Red Hat GmbH
# Author: Stefano Brivio <sbrivio@redhat.com>

gtools	ip jq sipcalc grep
htools	ip jq sipcalc grep cut

test	Interface name
gout	IFNAME ip -j link show | jq -rM '.[] | select(.link_type == "ether").ifname'
guest	ip link set dev __IFNAME__ up && sleep 2
hout	HOST_IFNAME6 ip -j -6 route show|jq -rM '[.[] | select(.dst == "default").dev] | .[0]'
check	[ -n "__IFNAME__" ]

test	SLAAC: prefix
gout	ADDR6 ip -j -6 addr show|jq -rM '.[] | select(.ifname == "__IFNAME__").addr_info[] | select(.scope == "global" and .prefixlen == 64).local'
gout	PREFIX6 sipcalc __ADDR6__/64 | grep prefix | cut -d' ' -f4
hout	HOST_ADDR6 ip -j -6 addr show|jq -rM '.[] | select(.ifname == "__HOST_IFNAME6__").addr_info[] | select(.scope == "global").local'
hout	HOST_PREFIX6 sipcalc __HOST_ADDR6__/64 | grep prefix | cut -d' ' -f4
check	[ "__PREFIX6__" = "__HOST_PREFIX6__" ]

test	SLAAC: route
gout	GW6 ip -j -6 route show|jq -rM '.[] | select(.dst == "default").gateway'
hout	HOST_GW6 ip -j -6 route show|jq -rM '[.[] | select(.dst == "default").gateway] | .[0]'
check	[ __GW6__ = __HOST_GW6__ ]
